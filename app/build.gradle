plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'kotlin-parcelize'
}

apply from: 'version.gradle'

android {
    compileSdkVersion COMPILE_SDK
    buildToolsVersion BUILD_TOOL

    defaultConfig {
        applicationId "com.valuelabs.youtubeartists"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGATED_SDK
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "API_KEY", API_KEY
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "API_KEY", API_KEY
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    // Youtube data api
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    // LifeCycle Component
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"

    // Dagger hilt - Dependency injection lib
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_viewmodel"


    // Timber - Logging lib
    implementation "com.jakewharton.timber:timber:$timber"

    // Leak canary - Memory leak detection lib
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_android"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutines"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$coroutines"

    // Rest API
    implementation "com.squareup.okhttp:okhttp:$okhttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
}